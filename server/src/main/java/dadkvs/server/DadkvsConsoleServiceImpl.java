package dadkvs.server;

/* these imported classes are generated by the contract */
import dadkvs.DadkvsConsole;
import dadkvs.DadkvsConsoleServiceGrpc;
import io.grpc.stub.StreamObserver;

public class DadkvsConsoleServiceImpl extends DadkvsConsoleServiceGrpc.DadkvsConsoleServiceImplBase {
    DadkvsServerState state;

    public DadkvsConsoleServiceImpl(DadkvsServerState state) {
        this.state = state;
    }

    @Override
    public void setleader(DadkvsConsole.SetLeaderRequest request,
            StreamObserver<DadkvsConsole.SetLeaderReply> responseObserver) {
        // for debug purposes
        System.out.println(request);

        boolean response_value = true;
        state.setLeader(request.getIsleader());

        // for debug purposes
        System.out.println("I am the leader = " + state.isLeader());

        this.state.wakeMainLoop();

        DadkvsConsole.SetLeaderReply response = DadkvsConsole.SetLeaderReply.newBuilder()
                .setIsleaderack(response_value).build();

        responseObserver.onNext(response);
        responseObserver.onCompleted();
    }

    @Override
    public void setdebug(DadkvsConsole.SetDebugRequest request,
            StreamObserver<DadkvsConsole.SetDebugReply> responseObserver) {
        // for debug purposes
        System.out.println(request);

        boolean response_value = true;

        state.setDebugMode(request.getMode());
        state.wakeMainLoop();

        // for debug purposes
        System.out.println("Setting debug mode to = " + state.getDebugMode());

        DadkvsConsole.SetDebugReply response = DadkvsConsole.SetDebugReply.newBuilder()
                .setAck(response_value).build();

        responseObserver.onNext(response);
        responseObserver.onCompleted();
    }
}
