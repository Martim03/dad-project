package dadkvs.server;

/* these imported classes are generated by the contract */
// import java.awt.color.ICC_Profile;
// import java.lang.classfile.instruction.ThrowInstruction;

import dadkvs.DadkvsMain;
import dadkvs.DadkvsMainServiceGrpc;
import io.grpc.stub.StreamObserver;

// TODO always put if statements to check if the request was alaready comitted and no work is necessary! 

public class DadkvsMainServiceImpl extends DadkvsMainServiceGrpc.DadkvsMainServiceImplBase {
    PaxosProposer proposer;
    PaxosLearner learner;

    public DadkvsMainServiceImpl(PaxosProposer proposer, PaxosLearner learner) {
        this.proposer = proposer;
        this.learner = learner;
    }

    @Override
    public void read(DadkvsMain.ReadRequest request, StreamObserver<DadkvsMain.ReadReply> responseObserver) {
        // for debug purposesd
        System.out.println("Receiving read request:" + request);

        int reqid = request.getReqid();
        int key = request.getKey();
        VersionedValue vv = learner.readStore(key);

        DadkvsMain.ReadReply response = DadkvsMain.ReadReply.newBuilder()
                .setReqid(reqid).setValue(vv.getValue()).setTimestamp(vv.getVersion()).build();

        responseObserver.onNext(response);
        responseObserver.onCompleted();
    }

    @Override
    public void committx(DadkvsMain.CommitRequest request, StreamObserver<DadkvsMain.CommitReply> responseObserver) {
        // for debug purposes
        System.out.println("Receiving commit request at "
                + java.time.LocalDateTime.now() + ": " + request);

        int reqid = request.getReqid();
        int key1 = request.getKey1();
        int version1 = request.getVersion1();
        int key2 = request.getKey2();
        int version2 = request.getVersion2();
        int writekey = request.getWritekey();
        int writeval = request.getWriteval();

        // for debug purposes
        System.out.println(">>> RECEIVING:\n reqid " + reqid + " key1 " + key1 + " v1"
                + version1 + " k2 " + key2 + " v2 "
                + version2 + " wk " + writekey + " writeval " + writeval);

        learner.registerClientRequest(request, responseObserver);
        proposer.wakeUp();
    }
}
